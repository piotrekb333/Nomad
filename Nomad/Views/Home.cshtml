@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using ContentModels = Umbraco.Web.PublishedContentModels;
@using Umbraco.Web.Models
@{
    int j = 0;

    Layout = "Master.cshtml";
    string carouselId = "galleryImages";
    IEnumerable<IPublishedContent> carousel = Umbraco.AssignedContentItem.GetPropertyValue<IEnumerable<IPublishedContent>>(carouselId);
    //Response.Redirect("/Casinos");
    string guidstr = "";
    if(Culture=="en-US"){
        guidstr="380435a1-a234-41c8-af6c-5600b44f2061";
    }
    if(Culture=="pl"){
        guidstr="21cb3b79-5a9b-4c3d-a68a-9cf62ca858af";
    }    
    Guid guid = new Guid(guidstr);
    var cs = ApplicationContext.Services.ContentService;
    var reviewChildrens = cs.GetById(guid).Children();

}


@if (carousel != null && carousel.Any())
{
    var logoList = carousel.Where(x => x.IsVisible());
    <div id="imageGallery">
        <div class="MS-content">
            @foreach (var logo in logoList)
            {
                string title = logo.HasValue("slideTitle") ? logo.GetPropertyValue<string>("slideTitle") : "";
                string subtitle = logo.HasValue("slideSubtitle") ? logo.GetPropertyValue<string>("slideSubtitle") : "";
                string imageTitle = logo.HasValue("slideImageTitle") ? logo.GetPropertyValue<string>("slideImageTitle") : "";
                string imageAlt = logo.HasValue("slideImageAlt") ? logo.GetPropertyValue<string>("slideImageAlt") : "";
                string imageUrl = logo.HasValue("slideImage") ? logo.GetPropertyValue<IPublishedContent>("slideImage").Url : "/img/carousel.jpg";
                //IEnumerable<RelatedLink> links = logo.GetPropertyValue<IEnumerable<RelatedLink>>("slideLink");
                //RelatedLink link = links != null ? links.FirstOrDefault() : null;
                string link = logo.HasValue("slideLink") ? logo.GetPropertyValue<string>("slideLink") : "";



                @*
                    <div class="item"><img style="width: auto; height: auto;max-width: 250px;max-height: 250px" src="@logo.Url" alt="@logo.Name logo" title="@logo.Name logo" /> </div>
                    <div class="item"><img style="width: auto; height: auto;max-width: 250px;max-height: 250px" src="@logo.Url" alt="@logo.Name logo" title="@logo.Name logo" /> </div>
                    <div class="item"><img style="width: auto; height: auto;max-width: 250px;max-height: 250px" src="@logo.Url" alt="@logo.Name logo" title="@logo.Name logo" /> </div>
                    <div class="item"><img style="width: auto; height: auto;max-width: 250px;max-height: 250px" src="@logo.Url" alt="@logo.Name logo" title="@logo.Name logo" /> </div>
                *@

                <div class="item">
                    <div class="imgTitle">
                        <h2 class="blogTitle">@title</h2>
                        <a href="@link"><img src="@(imageUrl)" alt="@imageAlt" title="@imageTitle" /></a>
                    </div>
                    <p>@subtitle</p>
                    <a href="@link">Read More</a>
                </div>




            }
        </div>
        <div class="MS-controls">
            <button class="MS-left"><i class="fa fa-chevron-left" aria-hidden="true"></i></button>
            <button class="MS-right"><i class="fa fa-chevron-right" aria-hidden="true"></i></button>
        </div>
    </div>
}

<div class="row mt-5">
<div class="offset-md-1 col-md-10">
    <table id="reviewsTable" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in reviewChildrens)
            {
                var rating = int.Parse(item.GetValue("casinoRating").ToString());
                var url = item.GetValue("casinoImage");
                string link="";
                string reviewLink="";
                string alt="";
                string title="";            
                if(item.GetValue("casinoRegisterLink")!=null)
                {
                    link = item.GetValue("casinoRegisterLink").ToString();
                }
                if(item.GetValue("casinoReviewLink")!=null)
                {
                    reviewLink = item.GetValue("casinoReviewLink").ToString();
                }
                if(item.GetValue("casinoImageAlt")!=null)
                {
                    alt = item.GetValue("casinoImageAlt").ToString();
                }  
                if(item.GetValue("casinoImageTitle")!=null)
                {
                    title = item.GetValue("casinoImageTitle").ToString();
                }               

                <tr class="review-tr">
                    <td class="review-td">
                        <div class="review-title">
                            @item.GetValue("casinoTitle")
                        </div>
                        @if (url != null)
                        {
                            <div class="review-image-wrapper">
                                <img class="reviews-image" alt="@alt" title="@title" src="@Umbraco.TypedMedia(url).Url" />
                            </div>
                        }
                    </td>
                    <td class="table-cell-position">
                        @if (!string.IsNullOrEmpty(link))
                        {
                            <a href="@link">
                                @item.GetValue("casinoRegister")
                            </a>
                        }
                        else
                        {
                            @item.GetValue("casinoRegister")
                        }
                    </td>
                    <td class="table-cell-position">
                        @if (!string.IsNullOrEmpty(reviewLink))
                        {
                            <a href="@reviewLink">
                                @item.GetValue("casinoReview")
                            </a>
                        }
                        else
                        {
                            @item.GetValue("casinoReview")
                        }
                    </td>
                    <td>


                        <div class="review-rating">
                            @for (int i = 0; i < 5; i++)
                            {
                                if (i < rating)
                                {
                                    <span class="fa fa-star checked"></span>
                                }
                                else
                                {
                                    <span class="fa fa-star"></span>
                                }
                            }
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

    @*
        @Html.Raw(CurrentPage.pageBody)
    *@
</div>

@*
    @if (Model.Content.HasValue("sliderImages"))
    {
        var logoList = Model.Content.GetPropertyValue<List<IPublishedContent>>("sliderImages");

        <div id="myCarousel" class="carousel slide" data-ride="carousel">
            <!-- Indicators -->
            <ol class="carousel-indicators">
                @for (int i = 0; i < logoList.Count; i++)
                {
                    string active = i == 0 ? "active" : "";
                    <li data-target="#myCarousel" data-slide-to="@i" class="@active"></li>
                }
            </ol>

            <!-- Wrapper for slides -->
            <div class="carousel-inner">
                @foreach (var logo in logoList)
                {
                    string active = j == 0 ? " active " : "";
                    <div class="item @active">
                        <img src="@logo.Url" alt="@logo.Name logo" />
                    </div>
                    j++;
                }
            </div>

            <!-- Left and right controls -->
            <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#myCarousel" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    }
*@



@*
    @Html.Raw(CurrentPage.homeBody)
*@